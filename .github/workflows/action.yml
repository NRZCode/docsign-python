name: Build and publish release

on:
  push:
    tags:
      - '*'

jobs:
  build-on-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with pyinstaller
      run: |
        pyinstaller --noconsole docsign.py

    - uses: actions/upload-artifact@v3
      with:
        name: app_windows
        path: .\dist\docsign.exe

  build-on-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with pyinstaller
      run: |
        pyinstaller --noconsole docsign.py

    - uses: actions/upload-artifact@v3
      with:
        name: app_linux
        path: ./dist/docsign

  create-release:
    runs-on: ubuntu-latest
    needs: [build-on-windows, build-on-linux]

    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ./

    - name: Create github release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release Version ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload windows artifact to github release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app_windows/docsign.exe
        asset_name: app_windows.exe
        asset_content_type: application

    - name: Upload linux artifact to github release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app_linux/docsign
        asset_name: app_linux
        asset_content_type: application
